----------------------------------------
New in Version 1.4:
Updated the Run bulk_extractor interface:
  * Changed interface to reflect current bulk_extractor commands.
  * Changed scanner list to include scanners from plugin directory.
  * Changed default number of threads to indicate threads available to JVM.
  * Changed view of forensic path.
  * Changed to allow browsing to forensic paths for recursive path features.
  * The selected Feature now is adjustable using the up/down scroll arrows.
  * The file type filter for Image files is no longer case-sensitive.
  * Doxygen documentation is now buildable under directory src/doxygen.

* change the up/down arrow behavior in the feature listing so that when a Feature is selected and up/down is pressed, the next feature in the listing is navigated to in the Navigation area rather than scrolling the feature listing.

* Excessive Warning pop-up:
Image reader has been reworked, so this is different now.

----------------------------------------
Deficiencies:
* Add regex filter in Feature parser to improve search.  Inspired by "boiled down" phone numbers.
Because this is not present, phone numbers in the histogram do not match phone numbers in the Referenced Featue view, resulting in a blank referenced feature view.  This is a functional deficiency.


----------------------------------------
Nice to have
Nice to have a "copy to clipboard" button in the bulk_extractor scan window
for bulk_extractor scan status.
Nice to have "Carve Forensic Path to File" button in the Navigation Pane.

----------------------------------------
Nice but unlikely to have

=== Improve Copy Functionality ===
Feature and Image lines may be copied by selecting a range, then copying the range.
Currently, the range is selected by pressing the mouse, dragging across the range, then releasing the mouse.
This limited capability may be improved by supporting standard functionality:
# Improve Copy functionality by providing Menu | Edit | Select All functionality.
# Improve range selection capability by allowing the user to click on a line, press CRTL, and click on another line to select the inclusive range.

=== Associate Sectors with Files ===
Using DFXML, filenames can be identified and displayed along with the media offsets of Features.  Additionally, filenames can be selected so that their contents can be displayed and scrolled through in the viewer's Image scroll area.  The basic idea is here: [http://domex.nps.edu/deep/begui/map_offset_to_file.pdf Access Files from Feature Offsets].The proposed implementation for this functionality is described here: [http://domex.nps.edu/deep/begui/dfxml_BEViewer.pdf Corrrelating Sectors with Files].

=== Highlight all Features Present on an Image Page ===
Currently, the selected Feature is highlighted in the Image view.  It would be nice to provide additional highlighting so that all features identified from all Feature files may be simultaneously highlighted in the Image view.

This capability is computationally intensive.  A "find now" button and a progress bar may be introduced for supporting this feature as a "check now" operation.

=== Select Features from the Image View ===
Currently, the Image View does not respond to selections in its content (except to copy it).  Functionality can be added so that selecting a Feature in the Image View 1) selects the associated Histogram Feature file and 2) selects the Feature so that it shows up in the Referenced Feature File listing.  This functionality enables quick traversal to the Histogram file and to the Referenced Feature listing.  Currently, the equivalent process is performed by identifying the Feature type, selecting its associated Histogram file in the Reports area, then selecting the Feature entry in the Histogram listing matching the path to the feature in the Image View.

* Read Reports from .zip:
Allow Open Report to select .zip file instead of report.xml.
Postponed until 1.4: I am disappointed to say that I can't get BEViewer to read Report files from .zip files for 1.3.  BEViewer Report files are File based and Java's ZIP files are not File based (in Java, you have a ZipFile class from which you list or stream zip entries).  Both File and ZipFile approaches provide InputStream, which is fine.  I'll need to write a new ReportProvider class that accepts Reports from files or zip archives and provides InputStream.  I'll then change BEViewer to work with ReportProvider rather than File.

* Show Classification Level postponed until 1.4.
Classification Level also needs to be embedded into output from bulk_extractor.

* For exif view: prioritize and sort fields.

